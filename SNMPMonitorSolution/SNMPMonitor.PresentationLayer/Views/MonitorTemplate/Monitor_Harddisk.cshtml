  <script type="text/javascript">
    $(document).ready(function () {
        $("#Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_chartGroup").on("receiveDataForNr{{=it.AgentNr}}", function (event, dataValue) {
            if (dataValue.ObjectID == "1.3.6.1.2.1.25.2.3") {
                appendPointLine{{=it.AgentNr}}(dataValue);
                updateValueToPie{{=it.AgentNr}}(dataValue);
            }
        });

        createChartLine{{=it.AgentNr}}();
        createChartPie{{=it.AgentNr}}();
    });

    function updateValueToPie{{=it.AgentNr}}(newValue) {
        try {
            var newdata = [];
            var chart = $("#Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_pie").highcharts();
            if(newValue.Result != undefined) {
                getDiscValuesFromJSONForPie{{=it.AgentNr}}(newValue.Result, newdata);
                chart.series[0].setData(newdata, true);
            }
        } catch(e){
            console.log(e);
        }
    }

    function findIndexOfDisc(json) {
        var output = -1;
        for(var i = 0; i < json["Results"].length; i++) {
            var value = ((json["Results"])[i]).Value;
            if(value.indexOf("C:") >= 0) {
                output = i;
            }
        }
        return output;
    }

    function getDiscValuesFromJSONForPie{{=it.AgentNr}}(result, newdata){
        var usedSpacePers;
        var freeSpacePers;
        try {
            var diskResult = JSON.parse(result);
            if(diskResult.Results.length > 0)
            {
                var indexOfCDisc = findIndexForStorage(diskResult, 'C:\\');
                var fullSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.5." + indexOfCDisc) >= 0) {
                        fullSpace = value.Value;
                    }
                });
                var usedSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.6." + indexOfCDisc) >= 0) {
                        usedSpace = value.Value;
                    }
                });
                var freeSpace = fullSpace - usedSpace;
                var usedSpacePers = (usedSpace / fullSpace) * 100;
                var freeSpacePers = (freeSpace / fullSpace) * 100;
                newdata.push(['Used', parseInt(Math.round(usedSpacePers))]);
                newdata.push(['Free', parseInt(Math.round(freeSpacePers))]);
            } else {
                console.log("no disk data");
            }
        } catch (e) {
            console.log(e);
        }
    }

    function getDiscValuesFromJSONForLine{{=it.AgentNr}}(timestamp, result, newdata) {
        var usedSpacePers;
        var freeSpacePers;
        try {
            var diskResult = JSON.parse(result);
            if(diskResult.Results.length > 0)
            {
                var indexOfCDisc = findIndexForStorage(diskResult, 'C:\\');
                var fullSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.5." + indexOfCDisc) >= 0) {
                        fullSpace = value.Value;
                    }
                });
                var usedSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.6." + indexOfCDisc) >= 0) {
                        usedSpace = value.Value;
                    }
                });
                var usedSpacePers = (usedSpace / fullSpace) * 100;
                newdata.push({ x:new Date(parseInt(timestamp.replace("/Date(", "").replace(")/", ""))), y:parseInt(Math.round(usedSpacePers))});
            } else {
                console.log("no disk data");
            }
        } catch (e) {
            console.log(e);
        }
    }

    function appendPointLine{{=it.AgentNr}}(json) {
        var chart = $("#Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_line").highcharts();
        var shift = chart.series[0].data.length >= 20;
        var usedSpacePers;
        try {
            var diskResult = JSON.parse(json.Result);
            if(diskResult["Results"].length > 0)
            {
                var indexOfCDisc = findIndexForStorage(diskResult, 'C:\\');
                var fullSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.5." + indexOfCDisc) >= 0) {
                        fullSpace = value.Value;
                    }
                });
                var usedSpace;
                $.each(diskResult["Results"], function(index, value) {
                    if (value.OID.indexOf("1.3.6.1.2.1.25.2.3.1.6." + indexOfCDisc) >= 0) {
                        usedSpace = value.Value;
                    }
                });
                var usedSpacePers = (usedSpace / fullSpace) * 100;
                chart.series[0].addPoint({ x:Date.parse(json.MonitorTimestamp + "+02:00"), y:parseInt(Math.round(usedSpacePers))}, true, shift);
            } else {
                console.log("no disk data");
            }
        } catch (e) {
            console.log(e);
        }
    }

    function findIndexForStorage(json, storageDescr) {
        var output = -1;
        var tmpArray = new Array();
        $.each(json["Results"], function(index, value) {
            var oid = value.OID;
            if (oid.indexOf("1.3.6.1.2.1.25.2.3.1.3") >= 0) {
                tmpArray.push(value);
            }
        });
        $.each(tmpArray, function(index, value) {
            if (value.Value.indexOf(storageDescr) >= 0) {
                output = index + 1;
            }
        });
        return output;
    }

    function createChartPie{{=it.AgentNr}}(){
        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });
        $("#Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_pie").highcharts({
            colors: ["#7cb5ec", "#f7a35c", "#90ee7e", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee",
                "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
            chart: {
                backgroundColor: null,
                height: 300,
                animation: Highcharts.svg
            },
            title: {
                text: 'Disk Auslastung Status'
            },
            yAxis: {
                title: {
                    text: 'in %'
                },
                min: 0,
                max: 100
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            legend: {
                enabled: false
            },
            series: [{
                type: 'pie',
                name: "Disk Auslastung Status",
                data: (function () {
                    var newdata = [];
                    $.ajax({
                        url: '@Url.Action("HistoryDataForOID","Data")',
                        data: 'id={{=it.AgentNr}}&oid=1.3.6.1.2.1.25.2.3&count=1',
                        async: false,
                        cache: false,
                        method: 'Get',
                        success: function (data) {
                            if(data.History[0] != undefined) {
                                getDiscValuesFromJSONForPie{{=it.AgentNr}}(data.History[0].Result, newdata);
                            }
                        }
                    });
                    return newdata;
                }())
            }]
        });
    }

    function createChartLine{{=it.AgentNr}}() {
        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });
        $("#Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_line").highcharts({
            chart: {
                type: 'line',
                height: 300,
                animation: Highcharts.svg
            },
            title: {
                text: 'Disk Auslastung Verlauf'
            },
            xAxis: {
                type: 'datetime'
            },
            yAxis: {
                title: {
                    text: 'in %'
                },
                min: 0,
                max: 100
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            legend: {
                enabled: false
            },
            series: [{
                name: "Disk Auslastung",
                data: (function () {
                    var newdata = [];
                    $.ajax({
                        url: '@Url.Action("HistoryDataForOID","Data")',
                        data: 'id={{=it.AgentNr}}&oid=1.3.6.1.2.1.25.2.3&count=20',
                        async: false,
                        cache: false,
                        method: 'Get',
                        success: function (data) {
                            $.each(data.History, function(index, value) {
                                getDiscValuesFromJSONForLine{{=it.AgentNr}}(value.MonitorTimestamp, value.Result, newdata);
                            });
                        }
                    });
                    return newdata;
                }())
            }]
        });
    }
</script>
<div id="Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_chartGroup">
    <div id="Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_pie" class="col-xs-12 col-lg-4 col-md-6">
    </div>
    <div id="Chart{{=it.AgentNr}}_1_3_6_1_2_1_25_2_3_line" class="col-xs-12 col-lg-4 col-md-6">
    </div>
</div>